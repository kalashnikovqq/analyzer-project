services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-analyzer_db}
    volumes:
      - postgres_data:/data/postgres
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-analyzer_db}
      - SECRET_KEY=${SECRET_KEY:-supersecretkey}
    networks:
      - app_network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    depends_on:
      - backend
    networks:
      - app_network

  # Простой reverse proxy на nginx
  proxy:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./frontend/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge 